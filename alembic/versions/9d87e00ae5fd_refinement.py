"""refinement

Revision ID: 9d87e00ae5fd
Revises: 25bbfa5d5160
Create Date: 2025-08-04 13:44:48.595223

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "9d87e00ae5fd"
down_revision: Union[str, Sequence[str], None] = "25bbfa5d5160"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""

    # Create the resulttype enum first
    result_type_enum = sa.Enum("DIRECT_RESULT", "NEAR_MISS", name="resulttype")
    result_type_enum.create(op.get_bind(), checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "refinement_sessions",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("collection_id", sa.String(length=36), nullable=False),
        sa.Column("rubric_id", sa.String(length=36), nullable=False),
        sa.Column("messages", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["collection_id"],
            ["collections.id"],
            name=op.f("fk_refinement_sessions__collection_id__collections"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_refinement_sessions")),
    )
    op.create_index(
        op.f("ix_refinement_sessions__collection_id"),
        "refinement_sessions",
        ["collection_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_refinement_sessions__rubric_id"),
        "refinement_sessions",
        ["rubric_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_refinement_sessions__updated_at"),
        "refinement_sessions",
        ["updated_at"],
        unique=False,
    )

    # Need to first add new columns to the tables, with defaults for non-nullable cols
    op.add_column("rubrics", sa.Column("version", sa.Integer(), nullable=False, server_default="1"))
    op.add_column(
        "judge_results",
        sa.Column("rubric_version", sa.Integer(), nullable=False, server_default="1"),
    )
    op.add_column(
        "judge_results",
        sa.Column(
            "result_type",
            sa.Enum("DIRECT_RESULT", "NEAR_MISS", name="resulttype"),
            nullable=False,
            server_default="DIRECT_RESULT",
        ),
    )
    op.add_column(
        "judge_result_centroids",
        sa.Column(
            "result_type",
            sa.Enum("DIRECT_RESULT", "NEAR_MISS", name="resulttype"),
            nullable=False,
            server_default="DIRECT_RESULT",
        ),
    )
    op.add_column(
        "rubric_centroids",
        sa.Column("rubric_version", sa.Integer(), nullable=False, server_default="1"),
    )
    op.add_column(
        "rubric_centroids",
        sa.Column(
            "result_type",
            sa.Enum("DIRECT_RESULT", "NEAR_MISS", name="resulttype"),
            nullable=False,
            server_default="DIRECT_RESULT",
        ),
    )

    # Add indices to the new columns
    op.create_index(
        op.f("ix_judge_results__rubric_version"), "judge_results", ["rubric_version"], unique=False
    )
    op.create_index(
        op.f("ix_rubric_centroids__rubric_version"),
        "rubric_centroids",
        ["rubric_version"],
        unique=False,
    )

    # Drop old foreign keys
    op.drop_constraint(
        op.f("fk_judge_results__rubric_id__rubrics"), "judge_results", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_rubric_centroids__rubric_id__rubrics"), "rubric_centroids", type_="foreignkey"
    )

    # Explicitly change the primary keys
    op.drop_constraint("pk_rubrics", "rubrics", type_="primary")
    op.create_primary_key("pk_rubrics", "rubrics", ["id", "version"])

    # Create new foreign keys
    op.create_foreign_key(
        op.f("fk_judge_results__rubric_id_rubric_version__rubrics"),
        "judge_results",
        "rubrics",
        ["rubric_id", "rubric_version"],
        ["id", "version"],
    )
    op.create_foreign_key(
        op.f("fk_rubric_centroids__rubric_id_rubric_version__rubrics"),
        "rubric_centroids",
        "rubrics",
        ["rubric_id", "rubric_version"],
        ["id", "version"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    pass
