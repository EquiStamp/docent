"""feat: charts

Revision ID: e68cf49cd5a2
Revises: d095fe14bb18
Create Date: 2025-07-21 20:30:40.904472

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e68cf49cd5a2"
down_revision: Union[str, Sequence[str], None] = "d095fe14bb18"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("charts", sa.Column("rubric_filter", sa.Text(), nullable=True))
    op.drop_column("charts", "sql_query")
    op.add_column(
        "search_clusters", sa.Column("search_query_id", sa.String(length=36), nullable=True)
    )
    op.alter_column("search_clusters", "search_query", existing_type=sa.TEXT(), nullable=True)
    op.drop_index(op.f("ix_search_clusters__search_query"), table_name="search_clusters")
    op.create_index(
        op.f("ix_search_clusters__search_query_id"),
        "search_clusters",
        ["search_query_id"],
        unique=False,
    )
    op.create_foreign_key(
        op.f("fk_search_clusters__search_query_id__search_queries"),
        "search_clusters",
        "search_queries",
        ["search_query_id"],
        ["id"],
    )
    op.add_column(
        "search_results", sa.Column("search_query_id", sa.String(length=36), nullable=True)
    )
    op.alter_column("search_results", "search_query", existing_type=sa.TEXT(), nullable=True)
    op.drop_index(op.f("ix_search_results__search_query"), table_name="search_results")
    op.drop_constraint(op.f("uq_search_result_key_combination"), "search_results", type_="unique")
    op.create_unique_constraint(
        "uq_search_result_key_combination",
        "search_results",
        ["collection_id", "agent_run_id", "search_query_id", "search_result_idx"],
    )
    op.create_index(
        op.f("ix_search_results__search_query_id"),
        "search_results",
        ["search_query_id"],
        unique=False,
    )
    op.create_foreign_key(
        op.f("fk_search_results__search_query_id__search_queries"),
        "search_results",
        "search_queries",
        ["search_query_id"],
        ["id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("fk_search_results__search_query_id__search_queries"),
        "search_results",
        type_="foreignkey",
    )
    op.drop_index(op.f("ix_search_results__search_query_id"), table_name="search_results")
    op.drop_constraint("uq_search_result_key_combination", "search_results", type_="unique")
    op.create_unique_constraint(
        op.f("uq_search_result_key_combination"),
        "search_results",
        ["collection_id", "agent_run_id", "search_query", "search_result_idx"],
        postgresql_nulls_not_distinct=False,
    )
    op.create_index(
        op.f("ix_search_results__search_query"), "search_results", ["search_query"], unique=False
    )
    op.alter_column("search_results", "search_query", existing_type=sa.TEXT(), nullable=False)
    op.drop_column("search_results", "search_query_id")
    op.drop_constraint(
        op.f("fk_search_clusters__search_query_id__search_queries"),
        "search_clusters",
        type_="foreignkey",
    )
    op.drop_index(op.f("ix_search_clusters__search_query_id"), table_name="search_clusters")
    op.create_index(
        op.f("ix_search_clusters__search_query"), "search_clusters", ["search_query"], unique=False
    )
    op.alter_column("search_clusters", "search_query", existing_type=sa.TEXT(), nullable=False)
    op.drop_column("search_clusters", "search_query_id")
    op.add_column("charts", sa.Column("sql_query", sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column("charts", "rubric_filter")
    # ### end Alembic commands ###
