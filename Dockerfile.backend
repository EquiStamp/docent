FROM python:3.12-slim

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

WORKDIR /app

# Install uv - it's way faster than pip
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

#################################
# Install external dependencies #
#################################
# Do this first to prevent unnecessary dep re-installs when the core app is changed but not deps

# Need this here so that the core app can build
COPY docent docent
# Convert uv.lock to a locked requirements.txt that pip can install
COPY pyproject.toml .
COPY uv.lock .
RUN uv export --format requirements-txt > requirements.txt
# Then install the requirements.txt
RUN uv pip install --system -r requirements.txt

#################################
# Install the core application #
#################################

# TODO(mengk): ignore the _web folder which has no Python code
COPY docent_core docent_core
RUN uv pip install --system -e .

# Copy .env and scripts for startup
COPY alembic alembic
COPY alembic.ini alembic.ini
COPY .env .env

# Create and set the docent user; avoid running container as root
RUN groupadd -r docent && useradd -r -g docent docent
USER docent

# Default command (overridden by docker-compose services or Terraform config)
CMD ["docent_core", "--help"]
